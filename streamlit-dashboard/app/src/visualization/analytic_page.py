import streamlit as st

from core.config import config
from src.api.data_retrieve_service import DataRetrieveService
from src.models.constants import Mode

from src.visualization.page_components.metric_render import create_entity_tab

service = DataRetrieveService(config)

def initialize_session_data(
        n_clients: int,
        n_advertisers: int,
        n_campaigns_per_advertiser: int,
        max_impressions: int,
        max_clicks: int
    ):
    """–ó–∞–ø–æ–ª–Ω—è–µ—Ç —Å–µ—Ä–≤–µ—Ä —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–æ–≤."""
    st.session_state.campaign_data, st.session_state.clients_data = service.insert_some_data(
        n_clients,
        n_advertisers,
        n_campaigns_per_advertiser,
        max_impressions,
        max_clicks
    )
    st.success("Test data inserted successfully!")



def analytics_page():
    """–°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–π."""
    st.title("üìä PROD - –ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–π –¥–∞—à–±–æ—Ä–¥.")

    with st.sidebar:
        with st.expander(label="–Ø—á–µ–π–∫–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö"):
            st.info("–ü—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö, –ë–î –Ω–µ —É–¥–∞–ª—è–µ—Ç—Å—è! –£—á–∏—Ç—ã–≤–∞–π—Ç–µ —ç—Ç–æ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ –º–µ—Ç—Ä–∏–∫ =) ")

            n_clients = st.slider(label="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–∏–µ–Ω—Ç–æ–≤", min_value=1, max_value=5000, value=200)
            n_advertisets = st.slider(label="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª–µ–π", min_value=1, max_value=10, value=1)
            n_campaigns_per_advertiser = st.slider(label="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–º–ø–∞–Ω–∏–π —É —Ä–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª—è", min_value=1, max_value=10, value=1)
            max_impressions = st.slider(label="–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ —Ä–µ–∫–ª–∞–º—ã", min_value=1, max_value=10000, value=500)
            max_clicks = st.slider(label="–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–∏–∫–æ–≤ –ø–æ —Ä–µ–∫–ª–∞–º–µ", min_value=1, max_value=10000, value=500)

            st.text("–ö–∞–∂–¥—ã–π —Ä–∞–∑ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –Ω–µ –Ω—É–∂–Ω–æ - –ø–æ—Å–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ '–û–±–Ω–æ–≤–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–∞—Ç–∞—Ñ—Ä–µ–π–º–∞.'")
            if st.button("–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ"):
                with st.spinner("–ò–¥—ë—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö"):
                    initialize_session_data(
                        n_clients, 
                        n_advertisets, 
                        n_campaigns_per_advertiser,
                        max_impressions,
                        max_clicks
                    )
                
            st.text("–¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ")
            if st.button("–û–±–Ω–æ–≤–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–∞—Ç–∞—Ñ—Ä–µ–π–º–∞"):
                data = st.session_state.campaign_data
                if len(data) == 0:
                    st.info("–í—ã –µ—â—ë –Ω–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–ª–∏ –¥–∞–Ω–Ω—ã–µ.")
                else:
                    st.text("–î–∞—Ç–∞—Ñ—Ä–µ–π–º —Ä–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª—å - –∫–∞–º–ø–∞–Ω–∏—è")
                    st.dataframe(st.session_state.campaign_data)
                    st.text("–î–∞—Ç–∞—Ñ—Ä–µ–π–º —Å —é–∑–µ—Ä–∞–º–∏")
                    st.dataframe(st.session_state.clients_data)

        with st.expander("–°–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π"):
            st.text("–ó–¥–µ—Å—å –≤—ã–≤–æ–¥–∏—Ç—Å—è —Å–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π (—Å–æ–∑–¥–∞–Ω–∏–µ, —É–¥–∞–ª–µ–Ω–∏–µ, —Å–≤–æ–µ–æ–±—Ä–∞–∑–Ω—ã–π –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞)")
            st.button(label="–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞", help="–ï—Å–ª–∏ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è, –º–æ–∂–Ω–æ –Ω–∞–∂–∞—Ç—å –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å =)")
            st.json(st.session_state.actions, expanded=False)

    current_mode = st.selectbox(
        label="–†–µ–∂–∏–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è:",
        options=[mode.value for mode in Mode],
        format_func=lambda x: "–ü–æ –¥–Ω—è–º" if x == Mode.DAILY.value else "–ê–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π"
    )
    st.session_state.selector = current_mode

    # Main tabs
    advertiser_tab, campaign_tab = st.tabs([
        "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ä–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª—é (AdvertiserId)",
        "üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞–º–ø–∞–Ω–∏–∏ (CampaignId)",
    ])

    with campaign_tab:
        st.subheader("–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∫–∞–º–ø–∞–Ω–∏–∏")
        create_entity_tab(
            entity_type="–∫–∞–º–ø–∞–Ω–∏–∏",
            get_daily_func=service.get_campaign_stat_daily,
            get_aggregate_func=service.get_campaign_stat,
            input_key="campaign_input"
        )

    with advertiser_tab:
        st.subheader("–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —Ä–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª—è")
        create_entity_tab(
            entity_type="—Ä–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª—è",
            get_daily_func=service.get_advertiser_stat_daily,
            get_aggregate_func=service.get_advertiser_stat,
            input_key="advertiser_input"
        )